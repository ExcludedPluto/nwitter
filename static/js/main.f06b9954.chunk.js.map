{"version":3,"sources":["myFirebase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","routes/MyNweet.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","getDate","date","getYear","getUTCMonth","getUTCDate","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","fontWeight","displayName","float","Date","createdAt","src","alt","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","now","creatorId","collection","add","textAlign","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","flexDirection","alignItems","fontSize","marginLeft","faUser","faBookOpen","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","MyNweet","userId","getMyNweet","useCallback","where","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f06b9954.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from 'myFirebase';\r\nimport React, { useState } from 'react';\r\n\r\nfunction AuthForm() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        //이벤트 기본 행위를 막기위한 함수 삽입\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? '계정 생성' : '로그인'}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? '로그인' : '계정 생성'}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'myFirebase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={'#04AAFF'}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"google\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    구글로 로그인 <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"github\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    깃허브로 로그인 <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from 'myFirebase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Nweet({ nweetObj, isOwner }) {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const getDate = (date) => {\r\n        const months = [\r\n            '01',\r\n            '02',\r\n            '03',\r\n            '04',\r\n            '05',\r\n            '06',\r\n            '07',\r\n            '08',\r\n            '09',\r\n            '10',\r\n            '11',\r\n            '12',\r\n        ];\r\n\r\n        return (\r\n            date.getYear() -\r\n            100 +\r\n            '/' +\r\n            months[date.getUTCMonth()] +\r\n            '/' +\r\n            (date.getUTCDate() < 10\r\n                ? '0' + date.getUTCDate()\r\n                : date.getUTCDate())\r\n        );\r\n    };\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\r\n            'Are you sure you want to delete this nweet?'\r\n        );\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                isOwner && (\r\n                    <>\r\n                        <form\r\n                            onSubmit={onSubmit}\r\n                            className=\"container nweetEdit\"\r\n                        >\r\n                            <input\r\n                                text=\"text\"\r\n                                placeholder=\"Edit your nweet\"\r\n                                value={newNweet}\r\n                                required\r\n                                onChange={onChange}\r\n                            />\r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Update Nweet\"\r\n                                className=\"formBtn\"\r\n                            />\r\n                        </form>\r\n                        <span\r\n                            onClick={toggleEditing}\r\n                            className=\"formBtn cancelBtn\"\r\n                        >\r\n                            Cancel\r\n                        </span>\r\n                    </>\r\n                )\r\n            ) : (\r\n                <>\r\n                    <h3>\r\n                        <span style={{ fontWeight: 'bold' }}>\r\n                            {nweetObj.displayName\r\n                                ? nweetObj.displayName\r\n                                : '익명'}\r\n                        </span>\r\n                        {!isOwner && (\r\n                            <span style={{ float: 'right' }}>\r\n                                {getDate(new Date(nweetObj.createdAt))}\r\n                            </span>\r\n                        )}\r\n                    </h3>\r\n                    <hr />\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} alt=\"error\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            <br></br>\r\n                            <span style={{ float: 'right' }}>\r\n                                {getDate(new Date(nweetObj.createdAt))}\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default Nweet;\r\n","import { dbService, storageService } from 'myFirebase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction NweetFactory({ userObj }) {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === '') {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = '';\r\n        if (attachment !== '') {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                'data_url'\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            displayName: userObj.displayName,\r\n        };\r\n\r\n        await dbService.collection('nweets').add(nweetObj);\r\n        setNweet('');\r\n        setAttachment('');\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        if (theFile != null) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = (finishedEvent) => {\r\n                const {\r\n                    currentTarget: { result },\r\n                } = finishedEvent;\r\n                setAttachment((prev) => result);\r\n            };\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment('');\r\n    return (\r\n        <div>\r\n            {!userObj.displayName && (\r\n                <div\r\n                    className=\"factoryForm\"\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginBottom: 20,\r\n                    }}\r\n                >\r\n                    {' '}\r\n                    프로필에서 이름을 설정하세요 !{' '}\r\n                </div>\r\n            )}\r\n            <form onSubmit={onSubmit} className=\"factoryForm\">\r\n                <div className=\"factoryInput__container\">\r\n                    <input\r\n                        className=\"factoryInput__input\"\r\n                        value={nweet}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"무엇을 생각하고 있나요?\"\r\n                        maxLength={120}\r\n                    />\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"&rarr;\"\r\n                        className=\"factoryInput__arrow\"\r\n                    />\r\n                </div>\r\n                <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>사진 추가</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input\r\n                    id=\"attach-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                    style={{\r\n                        opacity: 0,\r\n                    }}\r\n                />\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={attachment}\r\n                            style={{\r\n                                backgroundImage: attachment,\r\n                            }}\r\n                            alt=\"error\"\r\n                        />\r\n                        <div\r\n                            className=\"factoryForm__clear\"\r\n                            onClick={onClearAttachment}\r\n                        >\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from 'myFirebase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection('nweets')\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snapshot) => {\r\n                const nweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setNweets((prev) => nweetArray);\r\n            });\r\n        return;\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                        displayName={userObj.displayName}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faBookOpen, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ displayName }) => (\r\n    <nav>\r\n        <ul\r\n            style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}\r\n        >\r\n            <li>\r\n                <Link\r\n                    to=\"/\"\r\n                    style={{\r\n                        marginRight: 10,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faTwitter}\r\n                        color={'#04AAFF'}\r\n                        size=\"2x\"\r\n                    />\r\n                    <span style={{ marginTop: 10 }}>홈</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faUser}\r\n                        color={'#04AAFF'}\r\n                        size=\"2x\"\r\n                    />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {displayName ? `${displayName}의 프로필` : '프로필'}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"MyNweet\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faBookOpen}\r\n                        color={'#04AAFF'}\r\n                        size=\"2x\"\r\n                    />\r\n                    <span style={{ marginTop: 10 }}>내 Nweet들</span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;\r\n","import { authService } from 'myFirebase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName((prev) => value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display Name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"이름 변경\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                로그아웃\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { dbService } from 'myFirebase';\r\nimport Nweet from 'components/Nweet';\r\n\r\nfunction MyNweet({ userId }) {\r\n    const [nweets, setNweets] = useState([]);\r\n    const getMyNweet = useCallback(async () => {\r\n        dbService\r\n            .collection('nweets')\r\n            .where('creatorId', '==', userId)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snapshot) => {\r\n                const nweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setNweets((prev) => nweetArray);\r\n            });\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        getMyNweet();\r\n    }, [getMyNweet]);\r\n\r\n    return (\r\n        <div>\r\n            {nweets.map((nweet) => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={true} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default MyNweet;\r\n","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\nimport MyNweet from 'routes/MyNweet';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation displayName={userObj.displayName} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: '100%',\r\n                            margin: '0 auto',\r\n                            marginTop: 80,\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/MyNweet\">\r\n                            <MyNweet userId={userObj.uid} />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'myFirebase';\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    updateProfile: (args) => user.updateProfile(args),\r\n                });\r\n            } else {\r\n                setUserObj((prev) => null);\r\n            }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        if (user) {\r\n            setUserObj((prev) => ({\r\n                displayName: user.displayName,\r\n                uid: user.uid,\r\n                updateProfile: (args) => user.updateProfile(args),\r\n            }));\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {init ? (\r\n                <AppRouter\r\n                    refreshUser={refreshUser}\r\n                    isLoggedIn={Boolean(userObj)}\r\n                    userObj={userObj}\r\n                ></AppRouter>\r\n            ) : (\r\n                'Initializing'\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}